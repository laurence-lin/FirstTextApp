version: "3"
services:
  db:
    image: mysql
    environment: 
      MYSQL_ROOT_PASSWORD: root123
    volumes:
      - ./sql_scripts/init.sql:/docker-entrypoint-initdb.d/init.sql # Mount the init script, execute init.sql when container first starts
    ports:
      - "3306:3306"
    networks:
      - textapp_network
    restart: always

    
  django_app:
    build: .  # Build from the current directory (where Dockerfile is)
    ports:
      - "8000:8000"  # Map host port 8000 to container port 8000
    volumes:
      - .:/app # Persistent all files in current directory
    depends_on:
      - db
    environment:
      - MYSQL_HOST=db
      - MYSQL_USER=admin
      - MYSQL_PASSWORD=laurence
      - MYSQL_DATABASE=firsttext
    networks:
      - textapp_network
    restart: always
    healthcheck: # Do health check to make sure MySQL is up
      test: ["CMD-SHELL", "mysql -u$MYSQL_USER -p$MYSQL_PASSWORD -e 'SELECT 1;'"] # Use env vars
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s # Allow time for initialisation

  

networks:  # Define the network here!
  textapp_network:
